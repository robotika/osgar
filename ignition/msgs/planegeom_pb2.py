# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ignition/msgs/planegeom.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ignition.msgs import vector3d_pb2 as ignition_dot_msgs_dot_vector3d__pb2
from ignition.msgs import vector2d_pb2 as ignition_dot_msgs_dot_vector2d__pb2
from ignition.msgs import header_pb2 as ignition_dot_msgs_dot_header__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ignition/msgs/planegeom.proto',
  package='ignition.msgs',
  syntax='proto3',
  serialized_pb=_b('\n\x1dignition/msgs/planegeom.proto\x12\rignition.msgs\x1a\x1cignition/msgs/vector3d.proto\x1a\x1cignition/msgs/vector2d.proto\x1a\x1aignition/msgs/header.proto\"\x8d\x01\n\tPlaneGeom\x12%\n\x06header\x18\x01 \x01(\x0b\x32\x15.ignition.msgs.Header\x12\'\n\x06normal\x18\x02 \x01(\x0b\x32\x17.ignition.msgs.Vector3d\x12%\n\x04size\x18\x03 \x01(\x0b\x32\x17.ignition.msgs.Vector2d\x12\t\n\x01\x64\x18\x04 \x01(\x01\x42$\n\x11\x63om.ignition.msgsB\x0fPlaneGeomProtosb\x06proto3')
  ,
  dependencies=[ignition_dot_msgs_dot_vector3d__pb2.DESCRIPTOR,ignition_dot_msgs_dot_vector2d__pb2.DESCRIPTOR,ignition_dot_msgs_dot_header__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_PLANEGEOM = _descriptor.Descriptor(
  name='PlaneGeom',
  full_name='ignition.msgs.PlaneGeom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='ignition.msgs.PlaneGeom.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='normal', full_name='ignition.msgs.PlaneGeom.normal', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='ignition.msgs.PlaneGeom.size', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='d', full_name='ignition.msgs.PlaneGeom.d', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=137,
  serialized_end=278,
)

_PLANEGEOM.fields_by_name['header'].message_type = ignition_dot_msgs_dot_header__pb2._HEADER
_PLANEGEOM.fields_by_name['normal'].message_type = ignition_dot_msgs_dot_vector3d__pb2._VECTOR3D
_PLANEGEOM.fields_by_name['size'].message_type = ignition_dot_msgs_dot_vector2d__pb2._VECTOR2D
DESCRIPTOR.message_types_by_name['PlaneGeom'] = _PLANEGEOM

PlaneGeom = _reflection.GeneratedProtocolMessageType('PlaneGeom', (_message.Message,), dict(
  DESCRIPTOR = _PLANEGEOM,
  __module__ = 'ignition.msgs.planegeom_pb2'
  # @@protoc_insertion_point(class_scope:ignition.msgs.PlaneGeom)
  ))
_sym_db.RegisterMessage(PlaneGeom)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\021com.ignition.msgsB\017PlaneGeomProtos'))
# @@protoc_insertion_point(module_scope)
