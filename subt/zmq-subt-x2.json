{
  "version": 2,
  "robot": {
    "arguments": {
      "walldist": {
        "help": "distance for wall following (default: %(default)sm)",
        "default": 1.0,
        "type": "float"
      },
      "side": {
        "help": "which side to follow",
        "choices": ["left", "right", "auto"],
        "required": true
      },
      "speed": {
        "help": "maximum speed (%(default)sm)",
        "default": 1.0,
        "type": "float"
      },
      "timeout": {
        "help": "seconds of exploring before going home (default: %(default)ss)",
        "default": 600,
        "type": "int"
      },
      "init-offset": {
        "help": "inital 3D offset accepted as a string of comma separated values (meters)"
      },
      "init-path": {
        "help": "inital path to be followed from (0, 0). 2D coordinates are separated by ;"
      },
      "start-paused": {
        "dest": "start_paused",
        "action": "store_true",
        "help": "start robot Paused and wait for LoRa Contine command"
      }
    },
    "modules": {
      "app": {
          "driver": "subt.main:SubTChallenge",
          "in": ["emergency_stop", "pose2d", "scan", "rot", "artf",
                 "sim_time_sec", "acc", "origin"],
          "out": ["desired_speed", "pose2d", "artf_xyz", "pose3d", "stdout", "request_origin"],
          "init": {
            "walldist": "{walldist}",
            "side": "{side}",
            "speed": "{speed}",
            "timeout": "{timeout}",
            "symmetric": false,
            "virtual_bumper_sec": 60,
            "virtual_bumper_radius": 10.0,
            "virtual_world": true
          }
      },
      "detector": {
          "driver": "subt.artf_node:ArtifactDetectorDNN",
          "in": ["image", "scan"],
          "out": ["artf", "dropped", "debug_artf", "stdout"],
          "init": {
          }
      },
      "reporter": {
          "driver": "subt.artifacts:ArtifactReporter",
          "in": ["artf_xyz"],
          "out": ["artf_cmd"],
          "init": {}
      },
      "transmitter": {
          "driver": "zeromq",
          "in": [],
          "out": ["raw"],
          "init": {
            "mode": "PUSH",
            "endpoint": "tcp://localhost:5556"
          }
      },
      "receiver": {
          "driver": "zeromq",
          "in": [],
          "out": ["raw"],
          "init": {
            "mode": "PULL",
            "endpoint": "tcp://localhost:5555"
          }
      },
      "rosmsg": {
          "driver": "rosmsg",
          "in": ["slot_raw", "desired_speed", "tick", "stdout", "request_origin"],
          "out": ["rot", "acc", "scan", "image", "pose2d", "sim_time_sec", "cmd", "origin", "gas_detected", "orientation"],
          "init": {
            "downsample": 2
          }
      },
      "depth2scan": {
          "driver": "subt.depth2scan:DepthToScan",
          "in": ["depth", "scan"],
          "out": ["scan"],
          "init": {}
      },
      "rospy": {
          "driver": "subt.pull:Pull",
	      "init": {
	        "outputs": ["rot", "acc", "orientation"]
	      }
      }
    },
    "links": [["app.desired_speed", "rosmsg.desired_speed"],
              ["app.stdout", "rosmsg.stdout"],
              ["app.request_origin", "rosmsg.request_origin"],
              ["rosmsg.origin", "app.origin"],

              ["receiver.raw", "rosmsg.raw"],
              ["rosmsg.cmd", "transmitter.raw"],

              ["rospy.rot", "app.rot"],
              ["rospy.rot", "depth2scan.rot"],
              ["rospy.acc", "app.acc"],
              ["rospy.orientation", "app.orientation"],

              ["rosmsg.scan", "detector.scan"],
              ["rosmsg.scan", "depth2scan.scan"],

              ["rosmsg.image", "detector.image"],
              ["rosmsg.image", "app.image"],

              ["rosmsg.depth", "depth2scan.depth"],
              ["depth2scan.scan", "app.scan"],
              ["rosmsg.depth", "detector.depth"],

              ["rosmsg.pose2d", "app.pose2d"],
              ["rosmsg.sim_time_sec", "app.sim_time_sec"],

              ["rosmsg.gas_detected", "detector.gas_detected"],

              ["detector.artf", "app.artf"],
              ["detector.stdout", "rosmsg.stdout"],
              ["app.artf_xyz", "reporter.artf_xyz"],
              ["reporter.artf_cmd", "transmitter.raw"]]
  }
}
